name: ci

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:

  lint:
    name: Linting stage
    runs-on: ubuntu-22.04
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: install dependencies
        run: npm ci
      - name: Lint
        run: npx eslint .

  analyze:
    name: Static Code Analysis
    needs: lint
    runs-on: ubuntu-22.04
    permissions: read-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.0.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    name: Testing
    needs: analyze
    runs-on: ubuntu-22.04
    steps:
      - name: Test
        run: echo "executing unit tests . . ."

  build:
    name: build docker image
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: build image
        run: docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/ci-final-frontend:latest
      - name: delete built image
        run: docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/ci-final-frontend:latest

  deliver:
    name: push docker image to docker hub
    needs: build
    runs-on: ubuntu-22.04
    if: github.ref_type == 'tag'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ci-final-frontend:${{ github.ref_name }}, ${{ secrets.DOCKERHUB_USERNAME }}/ci-final-frontend:latest

  deploy:
    name: deploy backend
    needs: deliver
    runs-on: ubuntu-22.04
    if: github.ref_type == 'tag'
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: cifrontend.zapto.org
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: sudo ./deploy.sh